- name: Install Kubernetes on Linux
  hosts: all
  become: yes
  tasks:

    - name: Add Kubernetes node IPs to /etc/hosts
      blockinfile:
        path: /etc/hosts
        block: |
          192.168.1.1 k8s-master01
          192.168.1.2 k8s-master02
          192.168.1.3 k8s-master03
        marker: "# {mark} Kubernetes Master Nodes"

    - name: Load required kernel modules
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: Load modules now
      modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Configure sysctl settings
      copy:
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        content: |
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: Apply sysctl settings
      command: sysctl --system
      changed_when: false

    - name: Download and extract containerd
      block:
        - name: Download containerd
          get_url:
            url: https://github.com/containerd/containerd/releases/download/v1.7.13/containerd-1.7.13-linux-amd64.tar.gz
            dest: /tmp/containerd.tar.gz

        - name: Extract containerd
          unarchive:
            src: /tmp/containerd.tar.gz
            dest: /usr/local
            remote_src: yes

    - name: Download containerd service file
      get_url:
        url: https://raw.githubusercontent.com/containerd/containerd/main/containerd.service
        dest: /etc/systemd/system/containerd.service

    - name: Reload systemd and enable containerd
      systemd:
        name: containerd
        enabled: yes
        state: started
        daemon_reload: yes

    - name: Download and install runc
      block:
        - name: Download runc
          get_url:
            url: https://github.com/opencontainers/runc/releases/download/v1.1.12/runc.amd64
            dest: /tmp/runc
            mode: '0755'

        - name: Install runc
          command: install -m 755 /tmp/runc /usr/local/sbin/runc

    - name: Download and extract CNI plugins
      block:
        - name: Download CNI plugins
          get_url:
            url: https://github.com/containernetworking/plugins/releases/download/v1.4.0/cni-plugins-linux-amd64-v1.4.0.tgz
            dest: /tmp/cni-plugins.tgz

        - name: Create CNI directory
          file:
            path: /opt/cni/bin
            state: directory
            mode: '0755'

        - name: Extract CNI plugins
          unarchive:
            src: /tmp/cni-plugins.tgz
            dest: /opt/cni/bin
            remote_src: yes

    - name: Ensure required directories exist
      file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Generate default containerd config
      shell: containerd config default | tee /etc/containerd/config.toml

    - name: Set SystemdCgroup to true in containerd config
      replace:
        path: /etc/containerd/config.toml
        regexp: 'SystemdCgroup = false'
        replace: 'SystemdCgroup = true'

    - name: Restart containerd
      systemd:
        name: containerd
        state: restarted
        enabled: yes

    - name: Disable swap
      command: swapoff -a
      changed_when: false

    - name: Disable swap persistently in /etc/fstab
      replace:
        path: /etc/fstab
        regexp: '^.*\sswap\s.*$'
        replace: '# Swap disabled by Ansible'

    - name: Update apt repository
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg
        state: present

    - name: Add Kubernetes GPG key
      shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes APT repository
      copy:
        dest: /etc/apt/sources.list.d/kubernetes.list
        content: 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /'

    - name: Update apt repository again
      apt:
        update_cache: yes

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet=1.29.1-1.1
          - kubeadm=1.29.1-1.1
          - kubectl=1.29.1-1.1
        state: present

    - name: Hold Kubernetes packages
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Reboot the server
      reboot:
